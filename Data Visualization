install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("dbplyr", "RSQLite"))
#double check that you have these three boxed off on the right under packages 
library(dplyr)
library(dbplyr)
library(RSQLite)

##connecting sql to R 
# the "~/Documents" is subject to change on each persons computer
con <- dbConnect(drv=RSQLite::SQLite(), "~/Desktop/ipds_project/fareboxdb.sqlite")

##checking db contents
#dbListTables(con)
#dbListFields(con, "farebox_data")

##list all tables
#tables <- dbListTables(con)

##list all columns
#columns <- dbListFields(con, "farebox_data")

## exclude sqlite_sequence (contains table information)
tables <- tables[tables != "sqlite_sequence"]

df <- vector("list", length = length(tables))

## create a data.frame for each table
for (i in seq(along=tables)) {
  df[[i]] <- dbGetQuery(conn=con, statement=paste("SELECT * FROM '", tables[[i]], "'", sep=""))
}


##making sure its a dataframe
#class(dbGetQuery(conn=con, statement=paste("SELECT * FROM '", tables[[1]], "'", sep="")))

#summary(df)

#creating dataframe
fbdata <- df[[1]]
flatdb <- df[[2]]
nonzerodb <- df[[3]]

summary(fbdata)


#The unconditioned distribution of fare collection rates 

ggplot(data = fbdata, aes(x=ratio)) + geom_density() +
  geom_vline(xintercept = mean(fbdata$ratio), colour = "red", 
             linetype = "dashed") +
  ggtitle("Distribution of fare collection rates") +
  labs(y="Density", x="Ratio") 

#Scatter plot showing fare collection rates versus rates for flat rate systems 

ggplot(data = flatdb, aes(y=ratio, x= fare_rate, color = ratio)) + 
  geom_point(alpha = 1) +
  ggtitle("Fare Collection Ratio vs Flat System Rate Fares")+
  labs(y="Ratio", x = "Flat System Fare Rates") + scale_fill_discrete(guide=FALSE)

#Create a "joy plot" of the distribution of farebox ratios by fare system

ggplot(nonzerodb, aes(x =ratio, y = fare_system , fill = fare_system))+ 
  geom_joy(scale=1.5, rel_min_height=.01, alpha = 0.7) + 
  scale_y_discrete(expand = c(0.01, 0)) +
  labs(x = "Farebox ratio", y= "Fare System" , title = "Fare ratio by fare system")
  theme_joy() + scale_fill_discrete(guide=FALSE)

#Create a "joy plot" of the distribution of farebox ratios by continent 
 
ggplot(fbdata, aes(x =ratio, y = continent, fill = continent))+ 
  geom_joy(scale=1.5, rel_min_height=.01, alpha = 0.7) + 
  scale_y_discrete(expand = c(0.01, 0)) +
  labs(x = "Farebox Ratio", y= "Continent" , title = "Fare Collection Rates by Continent")
  theme_joy() + scale_fill_discrete(guide=FALSE)

#Predictive Model
x <- runif(86)
fbdata$continent <- with(fbdata, ifelse(x < 0.5, "Asia", "NA"))
y <- fbdata$ratio

m <- lm(y ~ continent, data = fbdata)
m.linear <- lm (y ~ x, data = fbdata)

fbdata$y.hat <- predict(m)
fbdata$y.hat.linear <- predict(m.linear)

ggplot(data = fbdata, aes(x=x, y=y, color = x)) + geom_point() +
  geom_point(aes(y = y.hat), colour = "red") +
  geom_point(aes(y = y.hat.linear), colour = "light green") +
  labs(x = "Continents", y= "Farebox Ratio" , title = "Predictive Modelling of Farebox Ratio by Continent", 
  color = "Continents\n")


#Check the correlations between variables and ratio and pick up the predictors

continent=as.factor(fbdata$"continent")

country=fbdata$country

system=as.factor(fbdata$"system")

fare_system=as.factor(fbdata$"fare_system")

fare_rate=as.numeric(fbdata$"fare_rate")

year=as.numeric(fbdata$"year")

ratio=as.numeric(fbdata$"ratio")

data=cbind(continent,country,fare_rate,ratio)

pairs(data)

cor(data)

###############################

##correlations output

###############################

continent     country      system fare_system  fare_rate        year      ratio

continent    1.00000000  0.09391696 -0.08025805  0.37131693  0.2617139  0.28946131 -0.5969103

country      0.09391696  1.00000000 -0.04917738  0.04608308  0.2056747  0.36026409 -0.1536311

system      -0.08025805 -0.04917738  1.00000000 -0.14297900  0.1216436  0.08075993  0.1266938

fare_system  0.37131693  0.04608308 -0.14297900  1.00000000  0.3396366  0.08877694 -0.2403239

fare_rate    0.26171387  0.20567467  0.12164365  0.33963664  1.0000000  0.16632891 -0.1712327

year         0.28946131  0.36026409  0.08075993  0.08877694  0.1663289  1.00000000 -0.1724118

ratio       -0.59691035 -0.15363106  0.12669381 -0.24032390 -0.1712327 -0.17241184  1.0000000

###############################



m <- lm(ratio~factor(continent), data = fbdata)

m.linear <- lm(ratio~factor(continent)+factor(country)+factor(fare_rate), data=fbdata)



summary(m)

summary(m.linear)



#Note: The number of variables are greater than the number of rows, creating fitting issue and not able to do further prediction, 
need to reduce the number of variables in the model (i.e. system)

#Base on the correlations to the ratio, ignore collinearity in this case
